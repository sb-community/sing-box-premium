name: Update sing-box

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 1,4,7,10,13,16,19,22,25,28 * *'

env:
  REPO: reF1nd/sing-box
  BRANCH: reF1nd-dev

jobs:
  go:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.go.outputs.version }}
    steps:
      - name: Get `Go` latest version
        id: go
        run: |
          echo version=$(curl -sSL https://raw.githubusercontent.com/actions/go-versions/update-versions-manifest-file/versions-manifest.json | grep '"version"' | head -1 | awk -F'"' '{print $4}') >> $GITHUB_OUTPUT

  release:
    runs-on: ubuntu-latest
    needs: go
    outputs:
      release_version: ${{ steps.release.outputs.release_version }}
      release_tags: ${{ steps.release.outputs.release_tags }}
    steps:
      - name: Checkout `${{ env.BRANCH }}`
        uses: actions/checkout@v4
        with:
          repository: ${{ env.REPO }}
          ref: ${{ env.BRANCH }}
          fetch-depth: 0

      - name: Setup `Go`
        uses: actions/setup-go@v5
        with:
          go-version: ${{ needs.go.outputs.version }}

      - name: Get `sing-box Release` version
        id: release
        run: |
          release_version=$(curl -s https://api.github.com/repos/SagerNet/sing-box/releases | grep '"tag_name"' | head -n 1 | cut -d ":" -f2 | sed 's/[",v ]//g')
          echo release_version=$release_version >> $GITHUB_OUTPUT
          echo release_tags=with_quic with_grpc with_dhcp with_wireguard with_ech with_utls with_reality_server with_acme with_clash_api with_v2ray_api with_gvisor with_tailscale >> $GITHUB_OUTPUT

  release_cross:
    strategy:
      matrix:
        include:
          # linux
          - { name: linux-amd64, goos: linux, goarch: amd64, goamd64: v1 }
          - { name: linux-armv7, goos: linux, goarch: arm, goarm: 7 }
          - { name: linux-arm64, goos: linux, goarch: arm64 }
          # windows
          - { name: windows-amd64, goos: windows, goarch: amd64, goamd64: v1 }
          - { name: windows-arm64, goos: windows, goarch: arm64 }
          # macOS
          - { name: darwin-amd64, goos: darwin, goarch: amd64, goamd64: v1 }
          - { name: darwin-arm64, goos: darwin, goarch: arm64 }

      fail-fast: false
    runs-on: ubuntu-latest
    needs:
      - go
      - release
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      GOAMD64: ${{ matrix.goamd64 }}
      GOARM: ${{ matrix.goarm }}
      GOMIPS: ${{ matrix.gomips }}
      CGO_ENABLED: 0
      release_TAGS: ${{ needs.release.outputs.release_tags }}
      release_VERSION: ${{ needs.release.outputs.release_version }}
    steps:
      - name: Checkout `${{ env.BRANCH }}`
        uses: actions/checkout@v4
        with:
          repository: ${{ env.REPO }}
          ref: ${{ env.BRANCH }}
          fetch-depth: 1

      - name: Setup `Go`
        uses: actions/setup-go@v5
        with:
          go-version: ${{ needs.go.outputs.version }}

      - name: Build `sing-box Release` core
        id: build
        run: go build -v -trimpath -ldflags "-checklinkname=0 -X 'github.com/sagernet/sing-box/constant.Version=${release_VERSION}' -s -w -buildid=" -tags "${release_TAGS}" ./cmd/sing-box

      - name: Upload files to workspace
        uses: actions/upload-artifact@v4
        with:
          name: sing-box-release-${{ matrix.name }}
          path: sing-box*
          compression-level: 9

  push_sing-box:
    needs:
      - release_cross
      - release
    runs-on: ubuntu-latest
    env:
      release_VERSION: ${{ needs.release.outputs.release_version }}
    steps:
      - name: Clone Repository
        uses: actions/checkout@v4

      - name: Download files from workspace
        uses: actions/download-artifact@v4
        with:
          path: ./tmp-sing-box/

      - name: Zip `sing-box` cores by `tar`
        run: |
          mkdir -p ./tmp-sing-box/compress/
          # Linux
          archs=(amd64 armv7 arm64)
          new_name=(amd64 armv7 armv8)
          for i in "${!archs[@]}"; do
            mv -f "./tmp-sing-box/sing-box-release-linux-${archs[i]}/sing-box" ./tmp-sing-box/sing-box-premium
            chmod +x ./tmp-sing-box/sing-box-premium
            tar --no-same-owner -czf "./tmp-sing-box/compress/sing-box-release-linux-${new_name[i]}.tar.gz" -C ./tmp-sing-box/ ./sing-box-premium
          done

          # macOS
          for arch in amd64 arm64; do
            mv -f "./tmp-sing-box/sing-box-release-darwin-${arch}/sing-box" ./tmp-sing-box/sing-box-premium
            chmod +x ./tmp-sing-box/sing-box-premium
            tar --no-same-owner -czf "./tmp-sing-box/compress/sing-box-release-darwin-${arch}.tar.gz" -C ./tmp-sing-box/ ./sing-box-premium
          done

      - name: Move `sing-box` cores
        run: |
          mkdir -p ./sing-box/
          mv -f ./tmp-sing-box/compress/* ./sing-box/
          # Windows
          7z a ./sing-box/sing-box-release-windows-amd64.7z ./tmp-sing-box/sing-box-release-windows-amd64/sing-box.exe
          7z a ./sing-box/sing-box-release-windows-arm64.7z ./tmp-sing-box/sing-box-release-windows-arm64/sing-box.exe

      - name: Calculate tag
        id: calculate_tag
        run: echo "tag=$(date +%Y%m%d%H%M)" >> $GITHUB_OUTPUT

      - name: Release and upload `sing-box` assets
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          release_name: sing-box ${{ env.release_VERSION }}
          tag: ${{ steps.calculate_tag.outputs.tag }}
          body: "[sing-box](https://github.com/${{ env.REPO }}) release with proxy provider"
          file_glob: true
          file: ./sing-box/*
